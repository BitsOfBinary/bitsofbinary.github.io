---
layout: post
title: "100 Days of YARA - Day 82"
date: 2023-03-23 00:00:00 -0000
categories: yara
---

# AcidBox - SSP DLL PE Meta Features - Part 1
We're done with strings for now, so let's move on to some of the meta features of the sample. Specifically, what PE metadata can we see?

One that I always start with is both the import hash and rich header hash, as it is quick and easy to put these in rules:
```
import "pe"
import "hash"

rule AcidBox_SSP_DLL_Loader_Imphash {
    meta:
        description = "Detects AcidBox SSP DLL loaders, based on a unique import hash"
        author = "BitsOfBinary"
        reference = "https://unit42.paloaltonetworks.com/acidbox-rare-malware/"
        hash = "003669761229d3e1db0f5a5b333ef62b3dffcc8e27c821ce9018362e0a2df7e9"

    condition:
        pe.imphash() == "30851d4a2b31e9699084a06e765e21b0"
}

import "pe"
import "hash"

rule AcidBox_SSP_DLL_Loader_Rich_Header_Hash {
    meta:
        description = "Detects AcidBox SSP DLL loaders, based on a unique rich header hash"
        author = "BitsOfBinary"
        reference = "https://unit42.paloaltonetworks.com/acidbox-rare-malware/"
        hash = "003669761229d3e1db0f5a5b333ef62b3dffcc8e27c821ce9018362e0a2df7e9"

    condition:
        hash.md5(pe.rich_signature.clear_data) == "269af2751efee65b1ab00622816c83e6"
}
```

I've got a script that automatically can pull out these values and put them in a rule: [https://github.com/BitsOfBinary/yarabuilder-examples/tree/main/pe](https://github.com/BitsOfBinary/yarabuilder-examples/tree/main/pe)