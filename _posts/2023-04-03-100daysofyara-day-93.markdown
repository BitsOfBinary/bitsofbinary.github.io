---
layout: post
title: "100 Days of YARA - Day 93"
date: 2023-04-03 00:00:00 -0000
categories: yara
---

# AcidBox - SSP DLL Code - Error Return Codes - Part 4
To use these error codes in a slightly different way, let's consider what the script from part 1 of these posts was doing: it was looking for instances where 4-byte values were being loading into `EAX` or `EBX` (which are subsequently returned by a function).

Using this fact, we can rewrite our rules to only look for instances where these error codes are being loaded into either of these registers, e.g. `$ = {(b8|bb) 06 04 00 a0}`. I found that this approach meant that the overall number of strings required to be present could be significantly reduced!
```
rule AcidBox_SSP_DLL_Loader_Unique_Return_Codes_C {
    meta:
        description = "Detects AcidBox SSP DLL loaders, based on unique return codes seen in functions"
        author = "BitsOfBinary"
        reference = "https://unit42.paloaltonetworks.com/acidbox-rare-malware/"
        hash = "003669761229d3e1db0f5a5b333ef62b3dffcc8e27c821ce9018362e0a2df7e9"
        
    strings:
        $ = {(b8|bb) 06 04 00 a0}
        $ = {(b8|bb) 01 04 00 a0}
        $ = {(b8|bb) 02 04 00 a0}
        $ = {(b8|bb) 0c 0c 00 a0}
        $ = {(b8|bb) 02 0c 00 a0}
        $ = {(b8|bb) 01 07 00 a0}
        $ = {(b8|bb) 07 08 00 a0}
        $ = {(b8|bb) 02 07 00 a0}
        $ = {(b8|bb) 04 06 00 a0}
        $ = {(b8|bb) 08 06 00 a0}
        $ = {(b8|bb) 02 06 00 a0}
        $ = {(b8|bb) 0c 08 00 a0}
        $ = {(b8|bb) 06 08 00 a0}
        $ = {(b8|bb) 04 08 00 a0}
        $ = {(b8|bb) 07 10 03 a0}
        $ = {(b8|bb) 09 10 03 a0}
        $ = {(b8|bb) 11 10 03 a0}
        $ = {(b8|bb) 02 10 03 a0}
        $ = {(b8|bb) 04 04 08 a0}
        $ = {(b8|bb) 07 04 08 a0}
        $ = {(b8|bb) 02 03 00 a0}
        $ = {(b8|bb) 02 04 08 a0}
        $ = {(b8|bb) 04 01 08 a0}
        $ = {(b8|bb) 06 01 08 a0}
        $ = {(b8|bb) 0e 01 08 a0}
        $ = {(b8|bb) 01 02 08 a0}
        $ = {(b8|bb) 02 02 08 a0}
        $ = {(b8|bb) 04 02 08 a0}
        $ = {(b8|bb) 06 02 08 a0}
        $ = {(b8|bb) 01 00 00 c0}
        $ = {(b8|bb) 02 0a 08 a0}
        $ = {(b8|bb) 02 06 03 a0}
        $ = {(b8|bb) 04 06 03 a0}
        $ = {(b8|bb) 10 06 03 a0}
        $ = {(b8|bb) 0e 06 03 a0}
        $ = {(b8|bb) 02 08 02 80}
        $ = {(b8|bb) 06 08 02 80}
        $ = {(b8|bb) 01 08 02 80}
        $ = {(b8|bb) 04 08 02 80}
        $ = {(b8|bb) 07 08 02 80}
        $ = {(b8|bb) 71 80 07 80}
        $ = {(b8|bb) 06 01 03 80}
        $ = {(b8|bb) 02 01 03 80}
        $ = {(b8|bb) 02 06 03 80}
        $ = {(b8|bb) 01 06 03 80}
        $ = {(b8|bb) 02 07 03 80}
        $ = {(b8|bb) 06 07 03 80}
        $ = {(b8|bb) 07 06 04 80}
        $ = {(b8|bb) 04 06 04 80}
        $ = {(b8|bb) 05 06 04 80}
        $ = {(b8|bb) 02 06 04 80}
        $ = {(b8|bb) 07 16 04 80}
        $ = {(b8|bb) 04 16 04 80}
        $ = {(b8|bb) 06 16 04 80}
        $ = {(b8|bb) 02 16 04 80}
        $ = {(b8|bb) 02 28 04 80}
        $ = {(b8|bb) 07 28 04 80}
        $ = {(b8|bb) 06 0b 04 80}
        $ = {(b8|bb) 02 0b 04 80}
        $ = {(b8|bb) 02 0c 04 80}
        $ = {(b8|bb) 02 0d 04 80}
        $ = {(b8|bb) 06 0d 04 80}
        $ = {(b8|bb) 02 1c 04 80}
        $ = {(b8|bb) 04 1c 04 80}
        $ = {(b8|bb) 07 1c 04 80}
        $ = {(b8|bb) 06 1c 04 80}
        $ = {(b8|bb) 0c 1c 04 80}
        $ = {(b8|bb) 06 1d 04 80}
        $ = {(b8|bb) 09 22 04 80}
        $ = {(b8|bb) 09 08 04 80}
        $ = {(b8|bb) 09 09 04 80}
        $ = {(b8|bb) 09 07 04 80}
        $ = {(b8|bb) 02 22 04 80}
        $ = {(b8|bb) 0c 01 04 80}
        $ = {(b8|bb) 02 01 04 80}
        $ = {(b8|bb) 02 10 04 80}
        $ = {(b8|bb) 02 11 04 80}
        $ = {(b8|bb) 07 11 04 80}
        $ = {(b8|bb) 0a 11 04 80}
        $ = {(b8|bb) 02 12 04 80}
        $ = {(b8|bb) 0a 12 04 80}
        $ = {(b8|bb) 07 12 04 80}
        $ = {(b8|bb) 01 0f 04 80}
        $ = {(b8|bb) 07 0f 04 80}
        $ = {(b8|bb) 02 0f 04 80}
        $ = {(b8|bb) 0a 0f 04 80}
        $ = {(b8|bb) 0b 0f 04 80}
        $ = {(b8|bb) 02 02 04 80}
        $ = {(b8|bb) 07 04 04 80}
        $ = {(b8|bb) 0c 04 04 80}
        $ = {(b8|bb) 02 04 04 80}
        $ = {(b8|bb) 02 14 04 80}
        $ = {(b8|bb) 02 15 04 80}
        $ = {(b8|bb) 0a 14 04 80}
        $ = {(b8|bb) 07 15 04 80}
        $ = {(b8|bb) 0c 15 04 80}
        $ = {(b8|bb) 09 25 04 80}
        $ = {(b8|bb) 02 25 04 80}
        $ = {(b8|bb) 02 26 04 80}
        $ = {(b8|bb) 06 27 04 80}
        $ = {(b8|bb) 07 27 04 80}
        $ = {(b8|bb) 09 27 04 80}
        $ = {(b8|bb) 0c 27 04 80}
        $ = {(b8|bb) 0a 27 04 80}
        $ = {(b8|bb) 04 27 04 80}
        $ = {(b8|bb) 02 27 04 80}
        $ = {(b8|bb) 04 13 04 80}
        $ = {(b8|bb) 0c 13 04 80}
        $ = {(b8|bb) 06 13 04 80}
        $ = {(b8|bb) 01 13 04 80}
        $ = {(b8|bb) 02 13 04 80}
        $ = {(b8|bb) 0c 21 04 80}
        $ = {(b8|bb) 06 21 04 80}
        $ = {(b8|bb) 05 21 04 80}
        $ = {(b8|bb) 02 21 04 80}
        $ = {(b8|bb) 06 17 04 80}
        $ = {(b8|bb) 0c 17 04 80}
        $ = {(b8|bb) 02 17 04 80}
        $ = {(b8|bb) 02 05 05 80}
        $ = {(b8|bb) 06 05 05 80}
        $ = {(b8|bb) 06 07 05 80}
        $ = {(b8|bb) 04 07 05 80}
        $ = {(b8|bb) 02 07 05 80}
        $ = {(b8|bb) 02 09 05 80}
        $ = {(b8|bb) 06 09 05 80}
        $ = {(b8|bb) 01 0b 07 80}
        $ = {(b8|bb) 06 0b 07 80}
        $ = {(b8|bb) 02 0b 07 80}
        $ = {(b8|bb) 06 0c 07 80}
        $ = {(b8|bb) 02 0c 07 80}
        $ = {(b8|bb) 05 03 01 80}
        $ = {(b8|bb) 02 03 01 80}
        
    condition:
        uint16(0) == 0x5A4D and 10 of them
}
```

We could extend this further if we wanted, to include all possible registers that these values are being loaded into; but I'll leave that up to you if you'd like to try that out.