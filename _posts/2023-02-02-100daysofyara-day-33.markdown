---
layout: post
title: "100 Days of YARA - Day 33"
date: 2023-02-02 00:00:00 -0000
categories: yara
---

# YARA Tip - Hex values in text strings - Part 3
To really drive home the point about the use of hex values in text strings, here's a final example using the [Base64 modifier](https://yara.readthedocs.io/en/stable/writingrules.html#base64-strings) in YARA:
```
rule Reflective_Loader_Shellcode_Base64_Encoded {
    meta:
        description = "Detects Base64 encoded reflective loader shellcode stub, seen for example in Meterpreter samples"
        hash = "ed48d56a47982c3c9b39ee8859e0b764454ab9ac6e7a7866cdef5c310521be19"
        hash = "76d54a57bf9521f6558b588acd0326249248f91b27ebc25fd94ebe92dc497809"
        hash = "1db32411a88725b259a7f079bdebd5602f11130f71ec35bec9d18134adbd4352"
    
    strings:
        // pop     r10
        // push    r10
        // push    rbp
        // mov     rbp, rsp
        // sub     rsp, 20h
        // and     rsp, 0FFFFFFFFFFFFFFF0h
        // call    $+5
        // pop     rbx
        $ = "\x4D\x5A\x41\x52\x55\x48\x89\xE5\x48\x83\xEC\x20\x48\x83\xE4\xF0\xE8\x00\x00\x00\x00\x5B" base64 base64wide
       
    condition:
        any of them
}
```

Here, I have taken the shellcode stub seen in [Reflective loader](https://attack.mitre.org/techniques/T1620/) samples, such as Meterpreter payloads. You can obviously just search for this hex string to find the PE/shellcode payloads; however given those may possibly only ever end up in memory, it might be better to hunt for the loaders as well.

So using the fact that we can use hex values in text strings, I've taken that shellcode stub, converted it to a text string, and applied the `base64` and `base64wide` modifiers to find samples which have this shellcode Base64 encoded in them, which will catch PowerShell loaders for example!

This is one of those examples where you can take the string of one rule (i.e. finding Reflective Loader samples) and easily repurpose it for another one. You could also repeat this for one-byte XOR values too if you wanted!