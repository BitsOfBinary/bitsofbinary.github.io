---
layout: post
title: "100 Days of YARA - Day 35"
date: 2023-02-05 00:00:00 -0000
categories: yara
---

# YARA Atoms - Introduction
As you start getting more advanced in your usage of YARA, you will want to make sure you're writing efficient rules. A good concept to understand in YARA is that of atoms, which are well explained in the code that implements them: [https://github.com/VirusTotal/yara/blob/2b631d0ee47650923955398921c1ceccc3e38cb1/libyara/atoms.c](https://github.com/VirusTotal/yara/blob/2b631d0ee47650923955398921c1ceccc3e38cb1/libyara/atoms.c)

As the code points out:
> Atoms are undivided substrings found in a regexps and hex strings.
> ...
> When searching for regexps/hex strings matching a file, YARA uses these atoms to find locations inside the file where the regexp/hex string could match.

As such, if you are using using hex/regex strings which use wildcards/variable ranges, YARA will do some work behind the scenes to work out the best substrings to try and match the whole string you have specified. The code points out that sometimes this is straightforward, and you only need to search for one atom in a string to evaluate whether it matches. However, the more alternative sequences you add into your hex/regex strings (e.g. `{ab cd (ef | 00)}`), the more atoms may be needed to successfully evaluate a string match.

YARA will create an atom tree which it will then use to try and optimise using the least number of high quality atoms for searching in files. In the next post, we'll discuss what makes good quality atoms.